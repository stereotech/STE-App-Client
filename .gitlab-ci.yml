stages:
  - prepare
  - build
  - test
  - deploy

buildWeb:
  image: node
  stage: build
  cache:
    paths:
      - node_modules
  before_script:
    - npm install --dev
  script:
    - npm run build-web
  after_script:
    - cp -r dist web-build
  artifacts:
    paths:
      - web-build
    name: "web-build-$CI_COMMIT_REF_NAME"
  only:
    - develop
    - master

prepareAndroid:
  image: node
  stage: prepare
  cache:
    paths:
      - node_modules
      - cordova/node_modules
  before_script:
    - npm install --dev
    - cd cordova
    - npm install -g cordova
    - cordova platform add android
    - cd ..
  script:
    - npm run build-android
  after_script:
    - cp -r cordova/platforms/android android-build
  artifacts:
    paths:
      - android-build
  only:
    - develop
    - master

buildAndroid:
  image: openjdk:8-jdk
  variables:
    ANDROID_COMPILE_SDK: "28"
    ANDROID_BUILD_TOOLS: "28.0.3"
    ANDROID_SDK_TOOLS:   "4333796"
  before_script:
    - apt-get --quiet update --yes
    - apt-get --quiet install --yes wget tar unzip lib32stdc++6 lib32z1
    - wget --quiet --output-document=android-sdk.zip https://dl.google.com/android/repository/sdk-tools-linux-${ANDROID_SDK_TOOLS}.zip
    - unzip -d android-sdk-linux android-sdk.zip
    - echo y | android-sdk-linux/tools/bin/sdkmanager "platforms;android-${ANDROID_COMPILE_SDK}" >/dev/null
    - echo y | android-sdk-linux/tools/bin/sdkmanager "platform-tools" >/dev/null
    - echo y | android-sdk-linux/tools/bin/sdkmanager "build-tools;${ANDROID_BUILD_TOOLS}" >/dev/null
    - export ANDROID_HOME=$PWD/android-sdk-linux
    - export PATH=$PATH:$PWD/android-sdk-linux/platform-tools/
    - chmod +x ./gradlew
    # temporarily disable checking for EPIPE error and use yes to accept all licenses
    - set +o pipefail
    - yes | android-sdk-linux/tools/bin/sdkmanager --licenses
    - set -o pipefail
  script:
    - ./gradlew assembleRelease
  only:
    - develop
    - master

buildPanel:
  image: node
  stage: build
  cache:
    paths:
      - node_modules
      - cordova/node_modules
  before_script:
    - npm install --dev
    - cd cordova
    - npm install -g cordova
    - cordova platform add electron
    - cd ..
  script:
    - npm run build-panel
  after_script:
    - cp -r cordova/platforms/electron/build/linux-arm64-unpacked/ panel-build
  artifacts:
    paths:
      - panel-build
    name: "panel-build-$CI_COMMIT_REF_NAME"
  only:
    - develop
    - master