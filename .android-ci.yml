prepareAndroid:
  image: node
  stage: prepare
  cache:
    paths:
      - node_modules
      - cordova/node_modules
  before_script:
    - npm install --dev
    - cd cordova
    - npm install -g cordova
    - cd ..
  script:
    - npm run build-android
    - cd cordova
    - cordova prepare android
    - cd ..
  after_script:
    - cp -r cordova/platforms/android/ android-build
  artifacts:
    paths:
      - android-build
  only:
    - develop
    - master
    
.buildJob:
  image: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  stage: build
  before_script:
    - echo "Passing some artifacts"
    - echo "$signing_jks_file_hex" | xxd -r -p - > keystore.jks
    - "export VERSION_CODE=$((100 + $CI_PIPELINE_IID)) && echo $VERSION_CODE"
    - "export VERSION_SHA=`echo ${CI_COMMIT_SHORT_SHA}` && echo $VERSION_SHA"
  after_script:
    - rm keystore.jks || true
  artifacts:
    paths:
      - app/build/outputs
  only:
    - develop
    - master

buildRelease:
  extends: .buildJob
  script:
    - cd cordova/platforms/android
    - bundle exec fastlane buildRelease
  environment:
    name: production

.promote_job:
  image: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  when: manual
  dependencies: []
  only:
    - master
    - develop
  before_script:
    - echo $google_play_service_account_api_key_json > ~/google_play_api_key.json
  after_script:
    - rm ~/google_play_api_key.json

promoteAlpha:
  extends: .promote_job
  stage: alpha
  script:
    - cd cordova/platforms/android
    - bundle exec fastlane promote_internal_to_alpha

promoteBeta:
  extends: .promote_job
  stage: beta
  script:
    - cd cordova/platforms/android
    - bundle exec fastlane promote_alpha_to_beta

promoteProduction:
  extends: .promote_job
  stage: production
  script:
    - cd cordova/platforms/android
    - bundle exec fastlane promote_beta_to_production