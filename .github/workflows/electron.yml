
name: Panel App CI

on:
  push:
    branches: [ master, develop, master-v5, develop-v5 ]
  pull_request:
    branches: [ master, develop, master-v5, develop-v5 ]

jobs:
  build:
    runs-on: ubuntu-latest
    container: node:10.17.0-stretch-slim
    env:
      USE_HARD_LINKS: 'false'
    steps:
      - uses: actions/checkout@v2

      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: v1-npm-deps-${{ hashFiles('**/package-lock.json') }}
          restore-keys: v1-npm-deps-

      - name: Run npm preparation script
        run: | 
          npm ci --cache .npm --prefer-offline
          cd cordova
          npm install -g cordova
          cordova platform add electron
          cd ..
      
      - name: Copy resources
        run: cp -rf cordova/res/electron/cdv-electron-main.js cordova/platforms/electron/platform_www/cdv-electron-main.js
      
      - name: Build Panel App
        run: npm run build-panel
      
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v2.2.0
        with:
          name: panel-build
          path: cordova/platforms/electron/build/linux-armv7l-unpacked
          
  deploy:
    if: github.event_name	== 'push'
    runs-on: ubuntu-latest
    needs: [build]
    env: 
      REF: ${{ github.ref }}
      RELEASE_TYPE: testing
      STEAPP_VERSION: steapp
    steps:
      - name: Download a Build Artifact
        uses: actions/download-artifact@v2.0.5
        with:
          name: panel-build
        
      - uses: TheDoctor0/zip-release@0.4.1
        with:
          filename: panel-build.zip
          
      - name: Set release type
        run: echo "RELEASE_TYPE=stable" >> $GITHUB_ENV
        if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/master-v5'
        
      - name: Set STE App Version
        run: echo "STEAPP_VERSION=steapp_v5" >> $GITHUB_ENV
        if: github.ref == 'refs/heads/master-v5' || github.ref == 'refs/heads/develop-v5'
          
      - uses: ItsKarma/aws-cli@v1.70.0
        with:
          args: s3 cp panel-build.zip s3://${{ secrets.BUCKET_NAME }}/${{ env.STEAPP_VERSION }}/panel/${{ env.RELEASE_TYPE }}/ --acl public-read
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}      
